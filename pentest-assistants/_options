#!/bin/env bash
values_dotfile="$HOME/.tmp_values.json"

function get_network_interfaces {
    for iface in $(ifconfig | rg -o "eth[0-9]|wlan[0-9]|tun[0-9]"); do
        array_test+=($iface)
    done
    echo -n ${array_test[@]}
}

function get_intf_prms {
    ip=$(ifconfig | grep -A 1 ${1} | tail -1 | column -t | awk '{print $2}')

    if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        ip_g=`echo $ip | cut -d"." -f1-3`.1
        echo "\"${1}_ip\": \"${ip}\", \"${1}_g\": \"${ip_g}\", "
    fi
}

function create_j_str {
    all_intfs=$(get_network_interfaces)

    for intf in ${all_intfs[@]}; do
        j_str+=$(get_intf_prms $intf)
    done

    j_str+="\"port\": 4444,"
    j_str+="\"remote_host\": \"10.0.1.20\""

    echo -n $j_str
}

if [[ ! -f ${values_dotfile} ]]; then
    echo "{ $(create_j_str) }" | jq . > ${values_dotfile}
else
    target=$(jq '.target' ${values_dotfile} | tr -d '"')
fi

function update_json {
    # TODO: <21-06-21, modernpacifist> 
    # function must update json if one presents
    echo -e "null"
}

function ip_status {
    if ping -c 1 -W 0.5 ${1} > /dev/null 2>&1; [[ $? -eq 0 ]]; then
        echo -n "UP" 
    else
        echo -n "DOWN"
    fi
}

function print_ports {
    # TODO: <21-06-21, modernpacifist>
    # ports=$(parse ports with regular expression with jq)
    echo "Ports:"
    echo -e "port: $(jq '.port' $values_dotfile)\n"
}

function parse_field {
    value=$(jq ".$1" ${values_dotfile} | tr -d '"')

    if [[ $value != 'null' ]]; then
        echo $value
    else
        echo 
    fi
}

#function print_options {
#    parse_field eth0_ip
#    parse_field tun0_ip
#}
#
#print_options

#function parse_targets {
#    echo -n ""
#}

function print_interfaces {
    # https://unix.stackexchange.com/questions/443884/match-keys-with-regex-in-jq
    intfs=$(get_network_interfaces)

    for intf in $intfs; do
        echo $intf
    done
}

print_interfaces
