#!/bin/env bash
values_dotfile="$HOME/.tmp_values.json"

function get_network_interfaces {
    for intf in $(ifconfig | rg -wo "eth[0-9]|wlan[0-9]|tun[0-9]"); do
        array_test+=($intf)
    done
    echo -n ${array_test[@]}
}

function get_intf_prms {
    intf_ip=$(ifconfig ${1} | rg -w 'inet' | awk '{print $2}')

    if [[ $intf_ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        intf_ip_g=`echo $intf_ip | cut -d"." -f1-3`.1
        echo "\"${1}_ip\": \"${intf_ip}\", \"${1}_g\": \"${intf_ip_g}\", "
    fi
}

function create_j_str {
    all_intf=$(get_network_interfaces)

    for intf in ${all_intf[@]}; do
        j_str+=$(get_intf_prms $intf)
    done

    j_str+="\"port\": 4444,"
    j_str+="\"remote_host\": \"10.0.1.20\""

    echo -n $j_str
}

# TODO: <21-06-21, modernpacifist>
# this must update file, not distribute values
if [[ ! -f ${values_dotfile} ]]; then
    echo "{ $(create_j_str) }" | jq . > ${values_dotfile}
fi

function update_json {
    # TODO: <21-06-21, modernpacifist> 
    # function must update json if one presents
    echo -e "null"
}

function ip_status {
    if ping -c 1 -W 0.5 ${1} > /dev/null 2>&1; [[ $? -eq 0 ]]; then
        echo -n "UP" 
    else
        echo -n "DOWN"
    fi
}

function parse_field {
    echo -n $(jq ". | to_entries | map(select(.key | match(\"${1}\"))) | map(.value)" $values_dotfile | tr -d '\[\],\"')
}

for i in $(parse_field target); do
    echo $i
done

for i in $(parse_field port); do
    echo $i
done

for i in $(parse_field eth); do
    echo $i
done
