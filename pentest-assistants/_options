#!/bin/env bash
values_dotfile="$HOME/.tmp_values.json"

function get_network_interfaces {
    array_test=()
    for iface in $(ifconfig | cut -d " " -f1| tr ":" "\n" | awk NF | egrep -w "eth[0-9]{1}|tun[0-9]{1}"); do
        array_test+=($iface)
    done
    echo -n ${array_test[@]}
}

function create_j_str {
    all_intfs=$(get_network_interfaces)

    for intf in ${all_intfs[@]}; do
        intf_ip=$(ifconfig | grep -A 1 $intf | tail -1 | column -t | awk '{print $2}')
        intf_g=$(netstat -rn 2>/dev/null | grep $intf | awk '{print $2}' | head -1 | tr -d "\n")
        j_str+="\"${intf}_ip\": \"${intf_ip}\", \"${intf}_g\": \"${intf_g}\", "
    done

    j_str+="\"port\": 4444,"
    j_str+="\"remote_host\": \"10.0.1.20\""

    echo -n $j_str
}

if [[ ! -f ${values_dotfile} ]]; then
    echo "{ $(create_j_str) }" | jq . > ${values_dotfile}
else
    target=$(jq '.target' ${values_dotfile} | tr -d '"')
    echo $target
fi

function return_ip {
    if [[ -z $1 ]]; then
        echo -n "N/A"
        exit 1
    else
        echo -n $1
    fi
}

function ip_status {
    if ping -c 1 -W 0.5 $1 > /dev/null 2>&1; [[ $? -eq 0 ]]; then
        echo -n "UP" 
    else
        echo -n "DOWN"
    fi
}

function print_ports {
    echo "Ports:"
    echo -e "port: $(jq '.port' $values_dotfile)\n"
}

print_ports

function print_targets {
    echo "Targets:"
    echo -en "\$target: \033[1m$(return_ip $target)\033[0m  status: "; echo -e "\033[1m$(ip_status $target)\033[0m"
    echo -en "\$remote_host: \033[1m$(return_ip $remote_host)\033[0m  status: "; echo -e "\033[1m$(ip_status $remote_host)\033[0m"
    echo
}

print_targets
