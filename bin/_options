#!/bin/env bash
readonly values_dotfile="$HOME/.pentest_values.json"

function get_network_interfaces {
    for intf in $(ifconfig | rg -wo "eth[0-9]|wlan[0-9]|tun[0-9]"); do
        intf_ip=$(ifconfig ${intf} | rg -w 'inet' | awk '{print $2}')
        [[ ${intf_ip} =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]] && array_test+=(${intf}) 
    done

    echo -n ${array_test[@]}
}

function get_intf_prms {
    intf_ip=$(ifconfig ${1} | rg -w 'inet' | awk '{print $2}')
    intf_ip_g=`echo ${intf_ip} | cut -d"." -f1-3`.1

    echo -n "\"${1}_ip\": \"${intf_ip}\", \"${1}_g\": \"${intf_ip_g}\", "
}

function form_j_str {
    interfaces=$(get_network_interfaces)
    #for intf in $(get_network_interfaces); do
        #j_str+=$(get_intf_prms ${intf})
    #done
    for intf in $interfaces; do
        j_str+=$(get_intf_prms ${intf})
    done

    echo -n ${j_str::-2}
}

function ip_status {
    ping -c 1 -W 0.5 ${1} > /dev/null 2>&1; [[ $? -eq 0 ]] && echo -n "UP" || echo -n "DOWN"
}

function parse_field {
    echo -n $(jq ". | to_entries | map(select(.key | match(\"${1}\"))) | map(.value)" ${values_dotfile} | tr -d '\[\],\"')
}

function print_options {
    interfaces=$(get_network_interfaces)
    if [[ ! -z ${interfaces} ]]; then
        echo 'Localhost addresses:'
        for intf in $(get_network_interfaces); do 
            echo ${intf}
            echo -e "    ip: $(parse_field ${intf}_ip)"
            echo -e "    gateway: $(parse_field ${intf}_g)"
        done
    fi

    targets=$(parse_field target)
    if [[ ! -z ${targets} ]]; then
        echo 'Targets:'
        for ip in ${targets}; do
            echo -e "    ${ip} $(ip_status ${ip})"
        done
    fi

    ports=$(parse_field port)
    if [[ ! -z ${ports} ]]; then
        echo 'Ports:'
        for port in ${ports}; do
            echo -e "    ${port}"
        done
    fi
}

if [[ ! -f ${values_dotfile} ]]; then
    echo -n "{ $(form_j_str) }" | jq '.' > ${values_dotfile}
else 
    m_json=$(jq "." ${values_dotfile})
    echo -n ${m_json} | jq ". + { $(form_j_str) }" > ${values_dotfile}
fi

print_options
